{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItems.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","props","useState","term","setTerm","className","onSubmit","event","preventDefault","onTermSubmit","type","value","onChange","target","axios","create","baseURL","params","part","maxResults","key","VideoItems","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","App","setVideos","selectedVideo","setSelectedVideo","useEffect","a","youtube","get","q","response","data","items","ReactDom","render","document","querySelector"],"mappings":"wKA0BeA,EAxBG,SAACC,GAAW,IAAD,EACHC,mBAAS,IADN,mBACpBC,EADoB,KACdC,EADc,KAY3B,OACE,qBAAKC,UAAU,wBAAf,SACE,sBAAMA,UAAU,UAAUC,SAPT,SAACC,GACpBA,EAAMC,iBACNP,EAAMQ,aAAaN,IAKjB,SACE,sBAAKE,UAAU,QAAf,UACE,iDACA,uBAAOK,KAAK,OAAOC,MAAOR,EAAMS,SAdhB,SAACL,GACvBH,EAAQG,EAAMM,OAAOF,kB,QCFVG,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,OAAQ,CACNC,KAAM,UACNR,KAAM,QACNS,WAAY,EACZC,IARQ,6CCaGC,EAfI,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQjB,UAAU,kBAApD,UACE,qBACEA,UAAU,WACVoB,IAAKH,EAAMI,QAAQC,MACnBC,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEvC,qBAAK1B,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SAAyBiB,EAAMI,QAAQC,cCOhCK,EAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAeD,EAAOE,KAAI,SAACb,GAC/B,OACE,cAAC,EAAD,CAEEC,cAAeA,EACfD,MAAOA,GAFFA,EAAMc,GAAGC,YAOpB,OAAO,qBAAKhC,UAAU,0BAAf,SAA0C6B,KCOpCI,EApBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACrB,IAAKA,EACH,OAAO,6CAGT,IAAMiB,EAAS,iCAAD,OAAmCjB,EAAMc,GAAGC,SAE1D,OACE,gCACE,qBAAKhC,UAAU,WAAf,SACE,wBAAQsB,MAAM,eAAeC,IAAKW,MAEpC,sBAAKlC,UAAU,aAAf,UACE,6BAAKiB,EAAMI,QAAQC,QACnB,4BAAIL,EAAMI,QAAQc,qBCgCXC,EAvCH,SAACxC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACd+B,EADc,KACNS,EADM,OAEqBxC,mBAAS,MAF9B,mBAEdyC,EAFc,KAECC,EAFD,KAIrBC,qBAAU,WACRpC,EAAa,gBACb,IAEF,IAAMA,EAAY,uCAAG,WAAON,GAAP,eAAA2C,EAAA,sEACIC,EAAQC,IAAI,UAAW,CAC5C/B,OAAQ,CACNgC,EAAG9C,KAHY,OACb+C,EADa,OAMnBR,EAAUQ,EAASC,KAAKC,OACxBR,EAAiBM,EAASC,KAAKC,MAAM,IAPlB,2CAAH,sDAclB,OACE,sBAAK/C,UAAU,eAAf,UACE,cAAC,EAAD,CAAWI,aAAcA,IACzB,qBAAKJ,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAaiB,MAAOqB,MAEtB,qBAAKtC,UAAU,mBAAf,SACE,cAAC,EAAD,CAAWkB,cAbC,SAACD,GACrBsB,EAAiBtB,IAYgCW,OAAQA,eClC7DoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.4322d22e.chunk.js","sourcesContent":["import {useState} from 'react';\r\n\r\nconst SearchBar = (props) => {\r\n  const [term, setTerm] = useState('');\r\n\r\n  const onSearchHandler = (event) => {\r\n    setTerm(event.target.value)\r\n  }\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onTermSubmit(term)\r\n  }\r\n\r\n  return (\r\n    <div className=\"search-bar ui segment\">\r\n      <form className=\"ui form\" onSubmit={onFormSubmit} >\r\n        <div className=\"field\" >\r\n          <label>Video Search</label>\r\n          <input type=\"text\" value={term} onChange={onSearchHandler} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyCZRNTzztahyoGImg3yixqCmiEERul3YQw';\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n  params: {\r\n    part: 'snippet',\r\n    type: 'video',\r\n    maxResults: 5,\r\n    key: KEY,\r\n  }\r\n}); ","const VideoItems = ({video, onVideoSelect }) => {\r\n  return (\r\n    <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n      <img\r\n        className=\"ui image\"\r\n        alt={video.snippet.title}\r\n        src={video.snippet.thumbnails.medium.url}\r\n      />\r\n      <div className=\"content\">\r\n        <div className=\"header\">{video.snippet.title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItems;\r\n","import VideoItems from \"./VideoItems\";\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderedList = videos.map((video) => {\r\n    return (\r\n      <VideoItems\r\n        key={video.id.videoId}\r\n        onVideoSelect={onVideoSelect}\r\n        video={video}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"ui relaxed divided list\">{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","const VideoDetail = ({ video }) => {\r\n  if (!video) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const videoSrc= `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"ui embed\">\r\n        <iframe title=\"video player\" src={videoSrc} />\r\n      </div>\r\n      <div className=\"ui segment\">\r\n        <h4>{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoDetail;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport youtube from \"../apis/youtube\";\r\nimport VideoList from \"./VideoList\";\r\nimport VideoDetail from \"./VideoDetail\";\r\n\r\nconst App = (props) => {\r\n  const [videos, setVideos] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    onTermSubmit('sports car')\r\n  },[])\r\n\r\n  const onTermSubmit = async (term) => {\r\n    const response = await youtube.get(\"/search\", {\r\n      params: {\r\n        q: term,\r\n      },\r\n    });\r\n    setVideos(response.data.items);\r\n    setSelectedVideo(response.data.items[0]);\r\n  };\r\n\r\n  const onVideoSelect = (video) => {\r\n    setSelectedVideo(video);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <SearchBar onTermSubmit={onTermSubmit} />\r\n      <div className=\"ui grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n            <VideoDetail video={selectedVideo} />\r\n          </div>\r\n          <div className=\"five wide column\">\r\n            <VideoList onVideoSelect={onVideoSelect} videos={videos} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDom.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n)"],"sourceRoot":""}